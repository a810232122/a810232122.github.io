<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>杨宏波的博客</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-10-14T03:31:30.911Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>杨宏波</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vue3+vite中配置rem适配</title>
    <link href="http://example.com/2022/10/14/vue-rem-exchange/"/>
    <id>http://example.com/2022/10/14/vue-rem-exchange/</id>
    <published>2022-10-14T02:24:56.000Z</published>
    <updated>2022-10-14T03:31:30.911Z</updated>
    
    <content type="html"><![CDATA[<h5 id="适用插件介绍"><a href="#适用插件介绍" class="headerlink" title="适用插件介绍"></a>适用插件介绍</h5><figure class="highlight plaintext"><figcaption><span>是```PostCSS```的插件，用于将像素单元生成```rem```单位</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">```autoprefixer``` 浏览器前缀处理插件</span><br><span class="line">```amfe-flexible``` 可伸缩布局方案 替代原先的```lib-flexible``` 选用了当前众多浏览器兼容的```viewport```</span><br><span class="line"></span><br><span class="line">##### 安装指南</span><br><span class="line"></span><br><span class="line">```npm install postcss-pxtorem amfe-flexible autoprefixer -S ```</span><br><span class="line"></span><br><span class="line">其中</span><br><span class="line"></span><br><span class="line">- ```postcss-pxtorem```根据需要添加指定的版本，例如现在用的```5.1.1```版本，适用方式```npm install postcss-pxtorem@5.1.1```</span><br><span class="line"></span><br><span class="line">- -S 是 -save的缩写，```npm```会帮你自动把模块和版本号添加到```devdependencies```</span><br><span class="line"></span><br><span class="line">##### 配置文件编辑</span><br><span class="line"></span><br><span class="line">在根目录中新建1```postcss.config.js```文件，配置```postcss```插件（37.5计算方式=&gt; 屏幕宽度/10）设计图对应的标准屏，其他屏幕会自动适用缩放的</span><br><span class="line"></span><br><span class="line">原本```module.export```导入语法</span><br><span class="line"></span><br><span class="line">```js</span><br><span class="line">module.exports = &#123;</span><br><span class="line">  plugins: &#123;</span><br><span class="line">    &#x27;postcss-pxtorem&#x27;: &#123;</span><br><span class="line">      rootValue: 37.5,</span><br><span class="line">      propList: [&#x27;*&#x27;]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我创建的工程上边的是可以正常运行的，应该是vite做了兼容，</p><p>如果是vite项目建议测试一下写法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line"><span class="attr">plugins</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;postcss-pxtorem&#x27;</span>:&#123;</span><br><span class="line">      <span class="attr">rootValue</span>:<span class="number">37.5</span>,</span><br><span class="line">      <span class="attr">propList</span>:[<span class="string">&#x27;*&#x27;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后需要导入<code>main.js</code>或者<code>main.ts</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;amfe-flexible&#x27;</span></span><br></pre></td></tr></table></figure><p>以上方法可能会时不时失效，推荐以下导入方式</p><p>在<code>src</code>文件夹下新建一个<code>utils</code>文件夹，新建<code>rem.js</code>文件，加入如下代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> baseSize = <span class="number">37.5</span>;<span class="comment">// 32</span></span><br><span class="line"><span class="comment">// 设置 rem 参数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">setRem</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 当前页面宽度相对于 750 宽的缩放比例，可根据自己需要修改</span></span><br><span class="line">  <span class="keyword">const</span> scale = <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientWidth</span> / <span class="number">375</span>;</span><br><span class="line">  <span class="comment">// 设置页面根节点字体大小</span></span><br><span class="line">  <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">style</span>.<span class="property">fontSize</span> = baseSize * <span class="title class_">Math</span>.<span class="title function_">min</span>(scale, <span class="number">2</span>) + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 初始化</span></span><br><span class="line"><span class="title function_">setRem</span>();</span><br><span class="line"><span class="comment">// 改变窗口大小时重新设置 rem</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onresize</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title function_">setRem</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;适用插件介绍&quot;&gt;&lt;a href=&quot;#适用插件介绍&quot; class=&quot;headerlink&quot; title=&quot;适用插件介绍&quot;&gt;&lt;/a&gt;适用插件介绍&lt;/h5&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;figcaption&gt;&lt;span&gt;是``</summary>
      
    
    
    
    <category term="Vue" scheme="http://example.com/categories/Vue/"/>
    
    
  </entry>
  
  <entry>
    <title>github配置ssh时的坑</title>
    <link href="http://example.com/2022/09/19/github/"/>
    <id>http://example.com/2022/09/19/github/</id>
    <published>2022-09-19T12:06:31.000Z</published>
    <updated>2022-09-20T06:58:44.417Z</updated>
    
    <content type="html"><![CDATA[<p>在配置GitHub中ssh连接方式时，尝试了多次发现以前的套路已经无法达到目标了。经过不懈的努力终于发现了其中问题，现在跟大家一起分享下吧。</p><p>首先生成ssh公私钥的时候，要使用最新的生成命令</p><p><code>ssh-keygen -t rsa -b 4096 -C &quot;your email adress&quot;</code></p><p>接下来就是重点，经过多次尝试发现需要将公私钥命名为<code>github_id_rsa</code>后保存，将其中公钥中的内容复制粘贴到Github中的SSH keys中，并保存。要是名称建议填写绑定电脑的名称，这样以后好区分。</p><p>然后通过 </p><p><code>ssh -T git@github.com</code></p><p>即可测试ssh通道是否可达。</p><p>完美解决。nice！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在配置GitHub中ssh连接方式时，尝试了多次发现以前的套路已经无法达到目标了。经过不懈的努力终于发现了其中问题，现在跟大家一起分享下吧。&lt;/p&gt;
&lt;p&gt;首先生成ssh公私钥的时候，要使用最新的生成命令&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ssh-keygen -t rsa -b </summary>
      
    
    
    
    <category term="开发" scheme="http://example.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
  <entry>
    <title>iOS 16适配指南</title>
    <link href="http://example.com/2022/09/19/Adaptation/"/>
    <id>http://example.com/2022/09/19/Adaptation/</id>
    <published>2022-09-19T09:16:18.000Z</published>
    <updated>2022-09-20T06:57:59.173Z</updated>
    
    <content type="html"><![CDATA[<p>2022年9月12号推送的iOS16已经过去一段时间了，回头看下iOS16需要适配的api还是蛮多的，小伙伴们一起看下需要review的代码吧</p><h3 id="新增控件"><a href="#新增控件" class="headerlink" title="新增控件"></a>新增控件</h3><ul><li><p><code>UICalendarView</code>，显示日期支持单选与多选</p></li><li><p><code>UIEditMenuInteraction</code>，取代 <code>UIMenuController</code>、<code>UIMenuItem</code></p></li><li><p><code>UIFindInteraction</code> 文本内容查找与替换</p></li><li><p><code>UIPasteControl</code> 读取剪贴板中的内容，跨 App 读取需要授权弹框</p></li><li><p><code>UIImage</code> 新增的构造函数，支持 SF Symbols 新增的类别 Variable</p></li><li><p><code>LARightStore</code> 存储、获取 <code>keychain</code> 数据</p></li></ul><h3 id="代码修改"><a href="#代码修改" class="headerlink" title="代码修改"></a>代码修改</h3><ul><li><p><code>UIScreen.main</code>将会废弃，建议使用<code>(UIApplication.shared.connectedScenes.first as? UIWindowScene)?.screen</code></p></li><li><p>支持 <code>setValue()</code> 方法设置设备的方向，替换为 UIWindowScene 的 <code>requestGeometryUpdate()</code> 方法。</p></li><li><p><code>UISheetPresentationController</code> 支持自定义显示的 <code>UIViewController </code>的大小。</p></li><li><p>UINavigationItem 改动</p><ul><li>新增属性 <code>style</code> 描述 <code>UINavigationItem</code> 在 <code>UINa vigationBar</code>上的布局</li><li>新增属性 <code>backAction</code> 用于自定义 <code>UIViewController</code> 返回<code>button</code>事件</li><li>新增属性 <code>titleMenuProvider</code> 用于给当前导航栏的标题添加操作菜单</li></ul></li><li><p><code>UIPageControl </code>支持垂直显示、设置指示器、设置当前页图片。</p></li><li><p><code>UITableView</code>、<code>UICollectionView</code> 使用 Cell Content Configuration 时支持使用 <code>UIHostingConfiguration</code> 包装 SwiftUI 代码定义 Cell 的内容。</p></li><li><p><code>UITableView</code>、<code>UICollectionView</code> 新增 <code>selfSizingInvalidation</code> 参数，使Cell可以自动调整大小</p></li><li><p><code>UIMenu</code> 支持尺寸 <code>small</code> 、 <code>medium</code> 、 <code>large</code></p></li><li><p><code>UIDevice</code> 获取设备信息时，只能获取设备的名称，隐私权限增强</p></li><li><p><code>WidgetFamily</code> 新增分类 <code>accessory</code> ，支持 iOS 锁屏显示和 watchOS 表盘显示</p></li></ul><h3 id="调试相关"><a href="#调试相关" class="headerlink" title="调试相关"></a>调试相关</h3><ul><li>iOS 16 真机调试开启，开启路径：设置-隐私与安全-开发者模式</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2022年9月12号推送的iOS16已经过去一段时间了，回头看下iOS16需要适配的api还是蛮多的，小伙伴们一起看下需要review的代码吧&lt;/p&gt;
&lt;h3 id=&quot;新增控件&quot;&gt;&lt;a href=&quot;#新增控件&quot; class=&quot;headerlink&quot; title=&quot;新增控件&quot;</summary>
      
    
    
    
    <category term="iOS" scheme="http://example.com/categories/iOS/"/>
    
    
  </entry>
  
</feed>
